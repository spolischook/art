<?php

/**
 * This file is part of the <name> project.
 *
 * (c) <yourname> <youremail>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

namespace Application\Sonata\MediaBundle\Entity;

use AppBundle\Entity\ArtWork;
use AppBundle\Entity\Exhibition;
use Doctrine\Common\Collections\ArrayCollection;
use Sonata\MediaBundle\Entity\BaseMedia as BaseMedia;
use Doctrine\ORM\Mapping as ORM;

/**
 * This file has been generated by the Sonata EasyExtends bundle.
 *
 * @link https://sonata-project.org/bundles/easy-extends
 *
 * References :
 *   working with object : http://www.doctrine-project.org/projects/orm/2.0/docs/reference/working-with-objects/en
 *
 * @author <yourname> <youremail>
 */
class Media extends BaseMedia
{
    /**
     * @var int
     */
    protected $id;

    /**
     * @var ArrayCollection|ArtWork[]
     *
     * @ORM\ManyToMany(targetEntity="AppBundle\Entity\ArtWork", mappedBy="images")
     */
    private $artWorks;

    /**
     * @var ArrayCollection|Exhibition[]
     *
     * @ORM\ManyToMany(targetEntity="AppBundle\Entity\Exhibition", mappedBy="photos")
     */
    private $exhibitions;

    public function __construct()
    {
        $this->artWorks = new ArrayCollection();
        $this->exhibitions = new ArrayCollection();
    }

    /**
     * Get id.
     *
     * @return int $id
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Add exhibition.
     *
     * @param Exhibition $exhibition
     *
     * @return Media
     */
    public function addExhibition($exhibition)
    {
        if (!$exhibition) {
            $this->exhibitions = new ArrayCollection();
        }

        if (!$this->exhibitions->contains($exhibition)) {
            $this->exhibitions->add($exhibition);
            $exhibition->addPhoto($this);
        }

        return $this;
    }

    /**
     * Remove exhibition.
     *
     * @param Exhibition $exhibition
     *
     * @return Media
     */
    public function removeExhibition($exhibition)
    {
        $this->getExhibitions()->removeElement($exhibition);

        return $this;
    }

    /**
     * Get exhibitions.
     *
     * @return ArrayCollection
     */
    public function getExhibitions()
    {
        return $this->exhibitions;
    }

    /**
     * Add art work.
     *
     * @param ArtWork $artWork
     *
     * @return Media
     */
    public function addArtWork($artWork)
    {
        if (!$artWork) {
            $this->artWorks = new ArrayCollection();
        }

        if (!$this->artWorks->contains($artWork)) {
            $this->artWorks->add($artWork);
            $artWork->addImages($this);
        }

        return $this;
    }

    /**
     * Remove art work.
     *
     * @param Media $artWork
     *
     * @return Media
     */
    public function removeArtWork($artWork)
    {
        $this->getArtWorks()->removeElement($artWork);

        return $this;
    }

    /**
     * Get art works.
     *
     * @return ArrayCollection
     */
    public function getArtWorks()
    {
        return $this->artWorks;
    }
}
